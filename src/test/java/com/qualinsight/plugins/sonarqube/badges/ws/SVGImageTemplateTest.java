/*
 * qualinsight-plugins-sonarqube-badges
 * Copyright (c) 2015-2016, QualInsight
 * http://www.qualinsight.com/
 *
 * This program is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation, either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this program. If not, you can retrieve a copy
 * from <http://www.gnu.org/licenses/>.
 */
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.qualinsight.plugins.sonarqube.badges.ws;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import static org.junit.Assert.*;

/**
 *
 * @author mignatenko
 */
public class SVGImageTemplateTest {
    
    public SVGImageTemplateTest() {
    }
    
    @BeforeClass
    public static void setUpClass() {
    }
    
    @AfterClass
    public static void tearDownClass() {
    }
    
    @Before
    public void setUp() {
    }
    
    @After
    public void tearDown() {
    }

    /**
     * Test of values method, of class SVGImageTemplate.
     */
    @Test
    public void testValues() {
        System.out.println("values");
        SVGImageTemplate[] expResult = null;
        SVGImageTemplate[] result = SVGImageTemplate.values();
        assertArrayEquals(expResult, result);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of valueOf method, of class SVGImageTemplate.
     */
    @Test
    public void testValueOf() {
        System.out.println("test valueOf");
        String arg0 = "ROUNDED";
        SVGImageTemplate expResult = SVGImageTemplate.ROUNDED;
        SVGImageTemplate result = SVGImageTemplate.valueOf(arg0);
        assertEquals(expResult, result);
    }

    /**
     * Test of content method, of class SVGImageTemplate.
     */
    @Test
    public void testContent() {
        System.out.println("Test content");
        SVGImageTemplate instance = SVGImageTemplate.FLAT;
        String expResult = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" +
                "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{{totalWidth}}\" height=\"20\">\n" +
                "\n" +
                "    <!--Generated by QualInsight SVG Badge Generator.-->\n" +
                "\n" +
                "    <g>\n" +
                "        <rect width=\"{{labelWidth}}\" height=\"20\" fill=\"{{labelBackgroundColor}}\"/>\n" +
                "        <rect x=\"{{labelWidth}}\" width=\"{{valueWidth}}\" height=\"20\" fill=\"{{valueBackgroundColor}}\">\n" +
                "            <animate\n" +
                "                    attributeType=\"XML\"\n" +
                "                    attributeName=\"fill\"\n" +
                "                    values=\"#800;{{valueBackgroundColor}};#800;#800\"\n" +
                "                    dur=\"1s\"\n" +
                "                    repeatCount=\"indefinite\"/>\n" +
                "        </rect>\n" +
                "    </g>\n" +
                "\n" +
                "    <g fill=\"#fff\" text-anchor=\"middle\" font-family=\"{{fontFamily}}\" font-size=\"11\">\n" +
                "        <text x=\"{{labelHalfWidth}}\" y=\"15\" fill=\"#111\" fill-opacity=\".3\">{{labelText}}</text>\n" +
                "        <text x=\"{{labelHalfWidth}}\" y=\"14\">{{labelText}}</text>\n" +
                "        <text x=\"{{valueHalfWidth}}\" y=\"15\" fill=\"#111\" fill-opacity=\".3\">{{valueText}}</text>\n" +
                "        <text x=\"{{valueHalfWidth}}\" y=\"14\">{{valueText}}</text>\n" +
                "    </g>\n" +
                "</svg>";
        String result = instance.content();
        assertEquals(expResult, result);
    }
    
}
